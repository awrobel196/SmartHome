{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Kompilator Microsoft (R) Visual C#",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.21569.2 (52021b4b)",
        "semanticVersion": "4.0.0",
        "language": "pl-PL"
      },
      "results": [
        {
          "ruleId": "CS0414",
          "level": "warning",
          "message": "Pole „GetSunriseSunsetFromAPIQueryHandler._longitude” jest przypisane, lecz jego wartość nie jest nigdy używana",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Application/SunriseSunset/GetSunriseSunsetFromAPI/GetSunriseSunsetFromAPIQueryHandler.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 33,
                  "endLine": 18,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0414",
          "level": "warning",
          "message": "Pole „GetSunriseSunsetFromAPIQueryHandler._latitude” jest przypisane, lecz jego wartość nie jest nigdy używana",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Application/SunriseSunset/GetSunriseSunsetFromAPI/GetSunriseSunsetFromAPIQueryHandler.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'GetSunriseSunsetFromAPIQuery' to match pascal case naming rules, consider using 'GetSunriseSunsetFromApiQuery'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Application/SunriseSunset/GetSunriseSunsetFromAPI/GetSunriseSunsetFromAPIQuery.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 18,
                  "endLine": 11,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_sunsetSunrise' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Application/SunriseSunset/GetSunriseSunsetFromAPI/GetSunriseSunsetFromAPIQueryHandler.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 31,
                  "endLine": 20,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_latitude' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Application/SunriseSunset/GetSunriseSunsetFromAPI/GetSunriseSunsetFromAPIQueryHandler.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_longitude' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Application/SunriseSunset/GetSunriseSunsetFromAPI/GetSunriseSunsetFromAPIQueryHandler.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 33,
                  "endLine": 18,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'GetSunriseSunsetFromAPIQueryHandler' to match pascal case naming rules, consider using 'GetSunriseSunsetFromApiQueryHandler'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Application/SunriseSunset/GetSunriseSunsetFromAPI/GetSunriseSunsetFromAPIQueryHandler.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 18,
                  "endLine": 15,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2068",
          "level": "warning",
          "message": "\"password\" detected here, make sure this is not a hard-coded credential.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Startup.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 97,
                  "endLine": 15,
                  "endColumn": 199
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Application/SunriseSunset/GetSunriseSunsetFromAPI/GetSunriseSunsetFromAPIQueryHandler.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 17,
                  "endLine": 31,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'dbCommand'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Function.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 17,
                  "endLine": 31,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2016",
          "level": "note",
          "message": "Forward the 'cancellationToken' parameter to the 'Send' method or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Application/SunriseSunset/GetSunriseSunsetFromAPI/GetSunriseSunsetFromAPIQueryHandler.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 32,
                  "endLine": 37,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ArgumentName": "cancellationToken",
              "ParameterName": "",
              "ShouldFix": "1"
            }
          }
        },
        {
          "ruleId": "CA2016",
          "level": "note",
          "message": "Forward the 'cancellationToken' parameter to the 'ReadAsStringAsync' method or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Application/SunriseSunset/GetSunriseSunsetFromAPI/GetSunriseSunsetFromAPIQueryHandler.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 38,
                  "endLine": 38,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ArgumentName": "cancellationToken",
              "ParameterName": "",
              "ShouldFix": "1"
            }
          }
        },
        {
          "ruleId": "CA2016",
          "level": "note",
          "message": "Forward the 'cancellationToken' parameter to the 'ExecuteSqlRawAsync' method or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Application/SunriseSunset/AddSunriseSunsetToDatabase/AddSunriseSunsetToDatabaseCommandHandler.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 19,
                  "endLine": 24,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ArgumentName": "cancellationToken",
              "ParameterName": "cancellationToken",
              "ShouldFix": "1"
            }
          }
        },
        {
          "ruleId": "CA2016",
          "level": "note",
          "message": "Forward the 'cancellationToken' parameter to the 'SaveChangesAsync' method or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/adam/source/repos/SmartHome/machines/SunriseSunsetMachine/Application/SunriseSunset/AddSunriseSunsetToDatabase/AddSunriseSunsetToDatabaseCommandHandler.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 19,
                  "endLine": 27,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ArgumentName": "cancellationToken",
              "ParameterName": "",
              "ShouldFix": "1"
            }
          }
        }
      ],
      "rules": {
        "CA2016": {
          "id": "CA2016",
          "shortDescription": "Forward the 'CancellationToken' parameter to methods",
          "fullDescription": "Forward the 'CancellationToken' parameter to methods to ensure the operation cancellation notifications gets properly propagated, or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2016",
          "properties": {
            "category": "Reliability",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS0414": {
          "id": "CS0414",
          "shortDescription": "Pole jest przypisane, ale jego wartość nie jest nigdy używana",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0414)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1075": {
          "id": "S1075",
          "shortDescription": "URIs should not be hardcoded",
          "fullDescription": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, …​etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1075",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S2068": {
          "id": "S2068",
          "shortDescription": "Hard-coded credentials are security-sensitive",
          "fullDescription": "Because it is easy to extract strings from an application source code or binary, credentials should not be hard-coded. This is particularly true for applications that are distributed or that are open-source.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2068",
          "properties": {
            "category": "Blocker Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "NotConfigurable"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields only used to store values without reading them later is a case of dead store. So changing the value of such field is useless and most probably indicates a serious error in the code.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope",
              "Unnecessary"
            ]
          }
        }
      }
    }
  ]
}